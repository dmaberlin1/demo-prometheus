version: '3.7'

services:

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      monitoring:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana:9.3.6
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      monitoring:
        aliases:
          - grafana

  postgres:
    image: 'postgres:16.2'
    environment:
      - POSTGRES_DB=aia_perf1
      - POSTGRES_PASSWORD=Postgres01
      - POSTGRES_USER=postgres
      - TZ=Europe/Kiev
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    command:
      -c logging_collector=on
      -c log_directory=/var/log/postgresql
      -c log_filename=postgresql-%Y-%m-%d_%H%M%S.log
      -c log_min_error_statement=error
      -c log_autovacuum_min_duration=0
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track=all
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

volumes:
  postgres_data:
  postgres_logs:
  prometheus-data:
  grafana-storage: { }

networks:
  monitoring:




#docker-compose up --build
#docker-compose up --d